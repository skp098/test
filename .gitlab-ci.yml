stages:
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA-$CI_PIPELINE_ID
  IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE:latest
  REGISTRY: gitlab-registry-$CI_PROJECT_NAME

  AGENT: objective-earth/objective-earth-wiki
  CONTEXT_TEST: $AGENT:test-agent
  CONTEXT_STAGING: $AGENT:test-agent
  CONTEXT_PROD: $AGENT:prod-agent

  MEDIAWIKI_DB_TYPE: mysql
  MEDIAWIKI_DB_HOST: mysqldb
  MEDIAWIKI_DB_USER: root
  MEDIAWIKI_DB_NAME: oearth

  HOST_TEST: $CI_MERGE_REQUEST_ID.oe-test.smarter.codes
  HOST_STAGING: oe-staging.smarter.codes
  HOST_PROD: oe-prod.smarter.codes

build:
  image: docker:19.03.12
  stage: build
  services:
    - docker:19.03.12-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $IMAGE_TAG_LATEST || echo "image for cache not found"
    - docker build --cache-from=$IMAGE_TAG_LATEST -t $IMAGE_TAG_LATEST -t $IMAGE_TAG .
    - docker push $IMAGE_TAG_LATEST
    - docker push $IMAGE_TAG
  only:
    - test
    - merge_requests

deploy-staging:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  environment:
    name: deploy/$CI_COMMIT_BRANCH-$CI_PROJECT_NAME
    url: https://$HOST_STAGING
  script:
    - kubectl config get-contexts
    - kubectl config use-context $CONTEXT_STAGING
    - kubectl apply -f https://raw.githubusercontent.com/mysql/mysql-operator/trunk/deploy/deploy-crds.yaml
    - kubectl apply -f https://raw.githubusercontent.com/mysql/mysql-operator/trunk/deploy/deploy-operator.yaml
    - >-
      kubectl create namespace $CI_COMMIT_BRANCH
      -o yaml --dry-run=client | kubectl apply -f -
    - >-
      head /dev/urandom | tr -dc A-Za-z0-9 | head -c 24 | xargs -I {}
      kubectl create --namespace=$CI_COMMIT_BRANCH
      secret generic mysqlauth
      --from-literal=rootUser=root
      --from-literal=rootHost=%
      --from-literal=rootPassword={} || :
    - >-
      sed -i
      -e 's|$MEDIAWIKI_DB_HOST|'"$MEDIAWIKI_DB_HOST"'|'
      -e 's|$INSTANCES|'"3"'|'
      kube-deployment-mysql.yml
    - kubectl apply --namespace=$CI_COMMIT_BRANCH -f kube-deployment-mysql.yml
    - >-
      kubectl create secret
      docker-registry $REGISTRY
      --namespace $CI_COMMIT_BRANCH
      --docker-server="$CI_REGISTRY"
      --docker-username="$CI_DEPLOY_USER"
      --docker-password="$CI_DEPLOY_PASSWORD"
      --docker-email="$GITLAB_USER_EMAIL"
      -o yaml --dry-run=client | kubectl apply -f -
    - >-
      sed -i 
      -e 's|$IMAGE_TAG|'"$IMAGE_TAG"'|'
      -e 's|$APP|'"$CI_PROJECT_NAME"'|'
      -e 's|$REGISTRY|'"$REGISTRY"'|'
      -e 's|$URL|'"$HOST_STAGING"'|'
      -e 's|$WG_SERVER|'"https://$HOST_STAGING"'|'
      -e 's|$MEDIAWIKI_DB_TYPE|'"$MEDIAWIKI_DB_TYPE"'|'
      -e 's|$MEDIAWIKI_DB_HOST|'"$MEDIAWIKI_DB_HOST"'|'
      -e 's|$MEDIAWIKI_DB_USER|'"$MEDIAWIKI_DB_USER"'|'
      -e 's|$MEDIAWIKI_DB_NAME|'"$MEDIAWIKI_DB_NAME"'|'
      -e 's|$PORT|'"80"'|'
      kube-deployment-mediawiki.yml
    - kubectl apply --namespace=$CI_COMMIT_BRANCH -f kube-deployment-mediawiki.yml
  only:
    - test

deploy-test:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  environment:
    name: testing/$CI_PROJECT_NAME-$CI_MERGE_REQUEST_ID
    url: https://$CI_MERGE_REQUEST_ID.oe-test.smarter.codes
    on_stop: teardown-mr
  script:
    - kubectl config get-contexts
    - kubectl config use-context $CONTEXT_TEST
    - kubectl apply -f https://raw.githubusercontent.com/mysql/mysql-operator/trunk/deploy/deploy-crds.yaml
    - kubectl apply -f https://raw.githubusercontent.com/mysql/mysql-operator/trunk/deploy/deploy-operator.yaml
    - >-
      kubectl create namespace $CI_MERGE_REQUEST_ID
      -o yaml --dry-run=client | kubectl apply -f -
    - >-
      head /dev/urandom | tr -dc A-Za-z0-9 | head -c 24 | xargs -I {}
      kubectl create --namespace=$CI_MERGE_REQUEST_ID
      secret generic mysqlauth
      --from-literal=rootUser=root
      --from-literal=rootHost=%
      --from-literal=rootPassword={} || :
    - >-
      sed -i
      -e 's|$MEDIAWIKI_DB_HOST|'"$MEDIAWIKI_DB_HOST"'|'
      -e 's|$INSTANCES|'"2"'|'
      kube-deployment-mysql.yml
    - kubectl apply --namespace=$CI_MERGE_REQUEST_ID -f kube-deployment-mysql.yml
    - >-
      kubectl create secret
      docker-registry $REGISTRY
      --namespace $CI_MERGE_REQUEST_ID
      --docker-server="$CI_REGISTRY"
      --docker-username="$CI_DEPLOY_USER"
      --docker-password="$CI_DEPLOY_PASSWORD"
      --docker-email="$GITLAB_USER_EMAIL"
      -o yaml --dry-run=client | kubectl apply -f -
    - >-
      sed -i 
      -e 's|$IMAGE_TAG|'"$IMAGE_TAG"'|'
      -e 's|$APP|'"$CI_PROJECT_NAME"'|'
      -e 's|$REGISTRY|'"$REGISTRY"'|'
      -e 's|$URL|'"$HOST_TEST"'|'
      -e 's|$WG_SERVER|'"https://$HOST_TEST"'|'
      -e 's|$MEDIAWIKI_DB_TYPE|'"$MEDIAWIKI_DB_TYPE"'|'
      -e 's|$MEDIAWIKI_DB_HOST|'"$MEDIAWIKI_DB_HOST"'|'
      -e 's|$MEDIAWIKI_DB_USER|'"$MEDIAWIKI_DB_USER"'|'
      -e 's|$MEDIAWIKI_DB_NAME|'"$MEDIAWIKI_DB_NAME"'|'
      -e 's|$PORT|'"80"'|'
      kube-deployment-mediawiki.yml
    - kubectl apply --namespace=$CI_MERGE_REQUEST_ID -f kube-deployment-mediawiki.yml
  only:
    - merge_requests

teardown-mr:
  image:
    name: bitnami/kubectl
    entrypoint: [""]
  stage: deploy
  environment:
    name: testing/$CI_PROJECT_NAME-$CI_MERGE_REQUEST_ID
    action: stop
  script:
    - kubectl config get-contexts
    - kubectl config use-context $CONTEXT_STAGING
    - kubectl delete namespace $CI_MERGE_REQUEST_ID
  when: manual
  only:
    - merge_requests
